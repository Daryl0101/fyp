# Generated by Django 4.2.5 on 2023-09-28 16:30

import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Family',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.UUIDField()),
                ('modified_by', models.UUIDField()),
                ('family_no', models.CharField(max_length=50, unique=True)),
                ('name', models.CharField(max_length=50)),
                ('is_halal', models.BooleanField(default=False)),
                ('household_income', models.DecimalField(decimal_places=2, max_digits=10)),
                ('phone_number', models.CharField(blank=True, max_length=20)),
                ('last_received_date', models.DateField()),
                ('address', models.CharField(blank=True, max_length=200)),
                ('total_member', models.IntegerField(default=0)),
                ('calorie_discount', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FoodCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.UUIDField()),
                ('modified_by', models.UUIDField()),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.CharField(blank=True, max_length=200)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FoodRestriction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.UUIDField()),
                ('modified_by', models.UUIDField()),
                ('family', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_backend.family')),
                ('food_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_backend.foodcategory')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.UUIDField()),
                ('modified_by', models.UUIDField()),
                ('product_no', models.CharField(max_length=50, unique=True)),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(blank=True, max_length=200)),
                ('image', models.URLField(default=None, null=True, validators=[django.core.validators.URLValidator()])),
                ('serving_size', models.DecimalField(decimal_places=2, max_digits=10)),
                ('carbohydrate_calorie', models.DecimalField(decimal_places=2, max_digits=10)),
                ('protein_calorie', models.DecimalField(decimal_places=2, max_digits=10)),
                ('fat_calorie', models.DecimalField(decimal_places=2, max_digits=10)),
                ('is_halal', models.BooleanField(default=False)),
                ('total_qty', models.IntegerField(default=0)),
                ('available_qty', models.IntegerField(default=0)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Storage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.UUIDField()),
                ('modified_by', models.UUIDField()),
                ('name', models.CharField(max_length=50, unique=True)),
                ('x', models.IntegerField()),
                ('y', models.IntegerField()),
                ('z', models.IntegerField()),
                ('is_halal', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.UUIDField()),
                ('modified_by', models.UUIDField()),
                ('first_name', models.CharField(max_length=50, unique=True)),
                ('last_name', models.CharField(max_length=50, unique=True)),
                ('gender', models.CharField(choices=[('MALE', 'Male'), ('FEMALE', 'Female')])),
                ('birthdate', models.DateField()),
                ('height', models.DecimalField(decimal_places=2, max_digits=10)),
                ('weight', models.DecimalField(decimal_places=2, max_digits=10)),
                ('activity_level', models.CharField(choices=[('SEDENTARY', 'Sedentary'), ('LIGHTLY_ACTIVE', 'Lightly Active'), ('MODERATELY_ACTIVE', 'Moderately Active'), ('VERY_ACTIVE', 'Very Active'), ('EXTRA_ACTIVE', 'Extra Active')])),
                ('bmi', models.DecimalField(decimal_places=2, max_digits=10)),
                ('calorie', models.DecimalField(decimal_places=2, max_digits=10)),
                ('image', models.URLField(default=None, null=True, validators=[django.core.validators.URLValidator()])),
                ('family', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_backend.family')),
                ('food_restrictions', models.ManyToManyField(through='app_backend.FoodRestriction', to='app_backend.foodcategory')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='foodrestriction',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_backend.person'),
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.UUIDField(auto_created=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=150, unique=True)),
                ('phone_number', models.CharField(blank=True, default='', max_length=20)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('profile_img_url', models.URLField(default=None, null=True, validators=[django.core.validators.URLValidator()])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
